[apply]
  ignorewhitespace  = change

[core]
  excludesfile = ~/.gitignore_global
  whitespace   = space-before-tab,trailing-space,blank-at-eol

[pager]
  # diff = diff-so-fancy | less --tabs=1,5 -RFX
  diff = less --tabs=1,5 -RFX
  show = less --tabs=1,5 -RFX
  branch = false

# http://stackoverflow.com/questions/5480069/autosetuprebase-vs-autosetupmerge
[branch]
  autosetupmerge = always
  autosetuprebase = never

[credential]
  helper = osxkeychain

[user]
  name = Kellen Hart
  email = kellenhart@gmail.com

[color]
  ui = auto
  diff = auto
  status = auto
  branch = auto

[core]
  editor = vim

[diff]
    tool = vscode
[difftool "vscode"]
    cmd = code -n --wait --diff $LOCAL $REMOTE

[merge]
  tool = vscode
  keepBackup = false;

[mergetool "vscode"]
  cmd = code -n --wait $MERGED
  keepBackup = false

[push]
  default = simple

[rebase]
  autosquash = true

[status]
  relativePaths      = true
  submodulesummary   = true
  showUntrackedFiles = all

[alias]
  # http://haacked.com/archive/2014/07/28/github-flow-aliases/
  co = checkout
  coma = checkout master
  # checkout branch with submodules
  co-recurse = !sh -c 'git checkout $1 && git submodule update --recursive'
  st = status
  br = branch
  recent = "for-each-ref --format='%(committerdate:relative) %(refname:short)' --sort=-committerdate refs/heads/ --count 25"
  cm = commit
  cmal = !git add -A && git commit
  cmam = commit --amend
  cmalam = !git add -A && git commit --amend
  cmamne = commit --amend --no-edit
  cmalamne = !git add -A && git commit --amend --no-edit
  comapl = !git checkout master && git pull
  ps = push
  # push new branch to new upstream branch of the same name
  psup = push -u origin HEAD

  pi = cherry-pick
  pinc = cherry-pick --no-commit

  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  # xargs needs -r on non-macosx...
  bclean = !echo "run g-prune-delete instead"
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

  summary = log --pretty=oneline
  active  = branch --contains 'HEAD@{2 weeks ago}'
  tree    = log --graph --pretty=oneline --abbrev-commit --decorate --color
  forest  = log --graph --pretty=oneline --abbrev-commit --decorate --color --all
  lg = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  lggr = log --decorate --graph
  dt = diff-tree --no-commit-id --name-status -r # followed by commit or commit range

  # submodule
  sbup = submodule update --remote --merge
  # gets submodules not yet pulled down from remote
  sbin = !git submodule init && git pull --recurse-submodules  && git submodule update --recursive

  ad = add
  rs = reset
  rsh1 = reset HEAD^
  rb = rebase
  df = diff
  dfhd = diff HEAD
  dfh1 = diff HEAD~1
  dfst = diff --staged
  pl = pull
  plrb = pull --rebase
  plrbdv = pull --rebase origin develop
  plrbma = pull --rebase origin master
  ss = stash
  sspp = stash pop

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f
[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true
[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true
